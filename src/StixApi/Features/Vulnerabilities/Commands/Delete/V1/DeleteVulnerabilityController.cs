using MediatR;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;

namespace StixApi.Features.Vulnerabilities.Commands.Delete.V1;

[ApiController]
[Route("v1/api/vulnerabilities")]
[Produces("application/json")]
public class DeleteVulnerabilityController : ControllerBase
{
    private readonly IMediator _mediator;
    private readonly ILogger<DeleteVulnerabilityController> _logger;

    public DeleteVulnerabilityController(IMediator mediator, ILogger<DeleteVulnerabilityController> logger)
    {
        _mediator = mediator;
        _logger = logger;
    }

    /// <summary>
    /// This endpoint deletes an existing vulnerability by its ID.
    /// </summary>
    /// <remarks>
    /// A Vulnerability is a mistake in software that can be directly used by a hacker to gain access to a system or network.
    /// /// </remarks>
    /// <param name="id">The ID of the vulnerability to delete</param>
    /// <returns>No content</returns>
    /// <response code="204">No content</response>
    [HttpDelete("{id}")]
    [SwaggerOperation(Tags = new[] { "vulnerabilities" })]
    [Authorize(Policy = "delete:vuln")]
    public async Task<ActionResult> Delete(string id)
    {
        _logger.LogInformation($"Deleting vulnerability with ID: {id}.");

        await _mediator.Send(new DeleteVulnerabilityCommand { Id = id });

        return NoContent();
    }
}
