using AutoMapper;
using NSubstitute;
using StixApi.Persistance.Models;
using StixApi.Features.Vulnerabilities.Commands;
using StixApi.Contracts.Persistance;
using StixApi.Profiles;
using Shouldly;

namespace StixApi.UnitTests.Vulnerabilities.Commands;

public class CreateVulnerabilityTests
{
    private readonly IMapper _mapper;

    public CreateVulnerabilityTests()
    {
        var configurationProvider = new MapperConfiguration(cfg =>
            {
                cfg.AddProfile<MappingProfile>();
            });

        _mapper = configurationProvider.CreateMapper();
    }

    [Fact]
    public async Task Handle_Valid_Vulnerability()
    {
        // Arrange
        var _repositoryMock = Substitute.For<IAsyncRepository<VulnerabilityDbModel>>();
        var handler = new CreateVulnerabilityCommandHandler(_mapper, _repositoryMock);

        // Act
        await handler.Handle(new CreateVulnerabilityCommand()
        {
            SpecificationVersion = "2.1",
            Id = "Vulnerability-123",
            Created = DateTime.UtcNow,
            Modified = DateTime.UtcNow,
            Name = "Test"
        }, CancellationToken.None);

        // Assert
        await _repositoryMock.Received(1)
            .AddAsync(
                Arg.Is<VulnerabilityDbModel>(v =>
                    v.Id == "Vulnerability-123"
                )
            );
    }
}